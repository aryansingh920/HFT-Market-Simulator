import pandas as pd
import mplfinance as mpf


def plot_symbol_candlestick(symbol_csv_path, freq='1ms'):
    """
    Reads a symbol-specific CSV (e.g., 'symbol_AAPL.csv') generated by the simulator
    and plots a candlestick chart using mplfinance, supporting millisecond-level 
    resampling if the timestamps have sufficient precision.
    
    :param symbol_csv_path: Path to the 'symbol_<SYMBOL>.csv' file.
    :param freq: Resampling frequency (e.g., '1ms', '10ms', '1S', '1Min', etc.).
    """
    # 1) Read the CSV into a DataFrame
    df = pd.read_csv(symbol_csv_path)

    # 2) Filter for snapshot events only (we'll use 'mid_price' for synthetic OHLC)
    snapshot_df = df[df['event_type'] == 'SNAPSHOT'].copy()
    if snapshot_df.empty:
        print(f"No SNAPSHOT data found in {symbol_csv_path}.")
        return

    # 3) Convert timestamps to datetime.
    #    The 'unit="s"' argument interprets the numeric timestamp as seconds.
    #    Pandas can handle sub-second precision if the float is precise enough.
    snapshot_df['datetime'] = pd.to_datetime(
        snapshot_df['timestamp'], unit='s')
    snapshot_df.set_index('datetime', inplace=True)

    # 4) Resample 'mid_price' to create synthetic OHLC data
    #    (Open, High, Low, Close) in each interval
    ohlc_df = snapshot_df['mid_price'].resample(freq).agg({
        'Open': 'first',
        'High': 'max',
        'Low': 'min',
        'Close': 'last'
    })

    # 5) Drop empty intervals
    ohlc_df.dropna(inplace=True)

    # 6) Create a dummy 'Volume' column if you want a volume subplot
    ohlc_df['Volume'] = 0

    # 7) Prepare a title
    symbol_name = symbol_csv_path.split('symbol_')[-1].replace('.csv', '')
    title = f"Candlestick for {symbol_name.upper()} [{freq} resample]"

    # 8) Plot with mplfinance
    mpf.plot(
        ohlc_df,
        type='candle',
        volume=True,         # show a volume subplot (though it's all zeros)
        mav=(3, 6, 9),       # example moving averages
        title=title,
        ylabel='Price',
        ylabel_lower='Volume',
        style='yahoo'
    )
